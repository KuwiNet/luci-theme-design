name: Release

on:
  push:
    tags:
      - 'v*'
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
          uname -a
          [ -f /proc/version ] && cat /proc/version
          [ -f /etc/issue.net ] && cat /etc/issue.net
          [ -f /etc/issue ] && cat /etc/issue
          ulimit -a

      - name: Download OpenWRT 23.05.2 SDK
        run: |
          # 下载并解压OpenWRT 23.05.2 SDK
          wget https://downloads.openwrt.org/releases/23.05.2/targets/x86/64/openwrt-sdk-23.05.2-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          xz -d openwrt-sdk-23.05.2-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          tar -xf openwrt-sdk-23.05.2-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar
          mv openwrt-sdk-23.05.2-x86-64_gcc-12.3.0_musl.Linux-x86_64 openwrt-sdk

      - name: Build
        id: build
        run: | 
          cd openwrt-sdk
          
          # 仅克隆luci-theme-design包
          git clone  --depth=1 -b "${{ github.ref_name }}" https://github.com/KuwiNet/luci-theme-design.git package/luci-theme-design
          
          # 安装依赖
          sudo apt update && sudo apt install -y minify

          # 压缩静态资源
          pushd package/luci-theme-design
          echo "$(minify dev/style.css)" > htdocs/luci-static/design/css/style.css
          echo "$(minify dev/script.js)" > htdocs/luci-static/design/js/script.js
          echo "$(minify dev/design.js)" > htdocs/luci-static/design/js/design.js
          popd

          # 更新并安装feeds，排除可能引起冲突的包
          ./scripts/feeds update -a
          ./scripts/feeds install -a -p luci
          ./scripts/feeds install -a -p packages -x python3-pymysql
          ./scripts/feeds install -a -p routing
          ./scripts/feeds install -a -p telephony

          # 生成默认配置
          make defconfig

          # 仅添加luci-theme-design的配置
          echo "CONFIG_PACKAGE_luci-theme-design=y" >> .config
          
          # 禁用有问题的包以避免递归依赖
          echo "CONFIG_PACKAGE_python3-pymysql=n" >> .config

          # 处理配置
          yes "" | make oldconfig || true
          
          # 清理配置缓存
          rm -f tmp/.config-package.in
          make defconfig

          # 仅编译luci-theme-design
          make package/luci-theme-design/compile -j1 V=s

          # 查找编译产物
          cd ..
          TARGET="$(find openwrt-sdk/bin/ -name 'luci-theme-design*.ipk')"

          # 输出结果
          echo "TARGET_FILES<<EOF" >> $GITHUB_OUTPUT
          echo "$TARGET" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "status=success" >> $GITHUB_OUTPUT

      - name: Get tag
        id: tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: false

      - name: Set default tag for non-tag triggers
        id: default_tag
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "tag=dev-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: steps.build.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          name: ${{ steps.tag.outputs.tag || steps.default_tag.outputs.tag }}
          tag_name: ${{ steps.tag.outputs.tag || steps.default_tag.outputs.tag }}
          generate_release_notes: true
          files: |
            ${{ steps.build.outputs.TARGET_FILES }}
    